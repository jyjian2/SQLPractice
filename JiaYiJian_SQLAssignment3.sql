/*
Answer the following questions:

1.	In SQL Server, assuming you can find the result by using both joins and subqueries, which one would you prefer to use and why?
Join can only use with SELECT statement, but subqueries can be used with WHERE, HAVING, FROM, ORDER BY
However, I prefer to use Join since it's performance is better than using subqueries

2.	What is CTE and when to use it?
CTE is common table result set. Using CTE makes the query more readable and we can use CTE to write resursive query.

3.	What are Table Variables? What is their scope and where are they created in SQL Server?
The table variable is a special type of the local variable that helps to store data temporarily, similar to the temp table in SQL Server.
Table variable is scoped to the stored procedure, batch, or user-defined function just like any local variable you create with a DECLARE statement.
It is stored in the tempdb system database. 

4.	What is the difference between DELETE and TRUNCATE? Which one will have better performance and why?

TRUNCATE is a DDL(Data Definition Language) command and is used to delete all the rows or tuples from a table. 
Unlike the DELETE command, TRUNCATE command does not contain a WHERE clause. In the TRUNCATE command, the transaction log for each deleted data page is recorded. 
Unlike the DELETE command. We cannot rollback the data after using the TRUNCATE command. 
TRUNCATE has better performance. TRUNCATE is faster than DELETE , as it doesn't scan every record before removing it.

5.	What is Identity column? How does DELETE and TRUNCATE affect it?
An identity column is a column (also known as a field) in a database table that is made up of values generated by the database.
TRUNCATE resets the identity value to the original seed value of the table.
Delete does not reset identity values

6.	What is difference between “delete from table_name” and “truncate table table_name”?
As TRUNCATE command is executed, entire data from the table is deleted, each tuple along with all it’s attribute values get eliminated from the table.
DELETE command operates only on a single relation or table at a time. In case you want to delete tuple from different relations you have to place different DELETE command for each. 

*/


--1.	List all cities that have both Employees and Customers.
SELECT DISTINCT(City) FROM DBO.Customers
WHERE City IN
(SELECT City FROM DBO.Employees
WHERE EmployeeID IS NOT NULL)
AND CustomerID IS NOT NULL

--2.	List all cities that have Customers but no Employee.
--a.	Use sub-query
SELECT DISTINCT(City) FROM DBO.Customers
WHERE City NOT IN
(SELECT City FROM DBO.Employees)

--b.	Do not use sub-query
SELECT DISTINCT(C.City) FROM dbo.Customers C
JOIN dbo.Employees E ON (C.City != E.City)


--3.	List all products and their total order quantities throughout all orders.
SELECT ord.ProductID, SUM(quantity) AS orderQuant FROM [Order Details] ord
JOIN Products p ON (ord.productID = p.productID)
GROUP BY ord.ProductID, ord.OrderID, ord.OrderID
ORDER BY ord.ProductID

--4.	List all Customer Cities and total products ordered by that city.

SELECT c.City, SUM(od.Quantity) AS totalProducts
FROM Customers c JOIN Orders o ON (c.CustomerID = o.CustomerID)
JOIN [Order Details] od ON (o.OrderID = od.OrderID)
GROUP BY od.ProductID, c.City, od.Quantity


--5.	List all Customer Cities that have at least two customers.
--b.	Use sub-query and no union
select DISTINCT(City) from Customers as c1
where (select COUNT(*) from customers where c1.city = city) > 2

--6.	List all Customer Cities that have ordered at least two different kinds of products.
select c.city, o.customerid, od.orderid, od.productid
from orders o join [Order Details] od on o.OrderID = od.OrderID
join Customers c on c.CustomerID = o.CustomerID
group by c.city

--7.	List all Customers who have ordered products, but have the ‘ship city’ on the order different from their own customer cities.
select distinct(CompanyName)
from Customers c join Orders o on c.CustomerID = o.CustomerID
where o.ShipCity != c.City

--8.	List 5 most popular products, their average price, and the customer city that ordered most quantity of it.
SELECT ProductID, ProductName, UnitPrice, RANK() OVER(ORDER BY UnitPrice DESC) RNK
FROM Products 
WHERE RANK() OVER(ORDER BY UnitPrice DESC) = 2

--9.	List all cities that have never ordered something but we have employees there.

select City from Employees
WHERE
(select COUNT(*) from orders as o where o.ShipCity = City) = 0 
and
(select COUNT(*) from Employees as e where e.City = City ) > 0


--10.	List one city, if exists, that is the city from where the employee sold most orders (not the product quantity) is, 
-- and also the city of most total quantity of products ordered from. (tip: join  sub-query)

(select max(COUNT(orderid)) as sumorders from Employees e join Orders o on e.EmployeeID = o.EmployeeID group by e.EmployeeID)

/*


11. How do you remove the duplicates record of a table?

12. Sample table to be used for solutions below- Employee (empid integer, mgrid integer, deptid integer, salary money) Dept (deptid integer, deptname varchar(20))
 Find employees who do not manage anybody.
13. Find departments that have maximum number of employees. (solution should consider scenario having more than 1 departments that have maximum number of employees). Result should only have - deptname, count of employees sorted by deptname.
14. Find top 3 employees (salary based) in every department. Result should have deptname, empid, salary sorted by deptname and then employee with high to low salary.

*/